Self-Review Exercises
3.1 Fill in the blanks in each of the following:
a) Each class declaration that begins with keyword __public__ must be stored in a file that has exactly the same name as the class and ends with the .java filename extension.
b) Keyword __class__ in a class declaration is followed immediately by the class’s name.
c) Keyword __new__ requests memory from the system to store an object, then calls the
corresponding class’s constructor to initialize the object. 
d) Each parameter must specify both a(n)__data type__ and a(n)__parameter name__ . 
e) By default, classes that are compiled in the same directory are considered to be in the
same package, known as the __source code files__. 
f) Java provides two primitive types for storing floating-point numbers in memory: __float__ and __double__. 
g) Variables of type double represent __double precision floating numbers or 15 decimal point digit__ floating-point numbers. 
h) Scanner method __nextDouble()__ returns a double value. 
i) Keyword public is an access __modifier__. 
j) Return type __void__ indicates that a method will not return a value. 
k) Scanner method __nextLine()__ reads characters until it encounters a newline character, then returns those characters as a String. 
l) Class String is in package __java.lang__. 
m) A(n) __import declaration__ is not required if you always refer to a class with its fully qualified class name. 
n) A(n) __double__ is a number with a decimal point, such as 7.33, 0.0975 or 1000.12345. 
o) Variables of type float represent __single__ -precision floating-point numbers. 
p) The format specifier __%f__ is used to output values of type float or double. 
q) Types in Java are divided into two categories— __primitive data__ types and __reference data__ types. 


3.2 State whether each of the following is true or false. If false, explain why.
a) By convention, method names begin with an uppercase first letter, and all subsequent words in the name begin with a capital first letter. 
Ans: false__ method names in java uses the camel case convention which means that the first letter is represented in small letter and subsequent words first letter starts with capital letter.

b) An import declaration is not required when one class in a package uses another in the same package. 
Ans: True

c) Empty parentheses following a method name in a method declaration indicate that the method does not require any parameters to perform its task. 
Ans: True

d) A primitive-type variable can be used to invoke a method. 
Ans: False, a primitive type variable cannot be used to invoke a method because we invoke a method with the variable name of the instance of the class created which can only be a reference data type.

e) Variables declared in the body of a particular method are known as instance variables and can be used in all methods of the class. 
Ans: False, variables declared in the body of a method are known as local variables and their existence ends inside that method.

f) Every method’s body is delimited by left and right braces ({ and }).
Ans: True
 
g) Primitive-type local variables are initialized by default. 
Ans: False, primitive type local variables are not initialized automatically except if it is an instance variable.

h) Reference-type instance variables are initialized by default to the value null.
Ans: True

i) Any class that contains public static void main(String[] args) can be used to execute an app. 
Ans: True

j) The number of arguments in the method call must match the number of parameters in the method declaration’s parameter list. 
Ans: 

k) Floating-point values that appear in source code are known as floating-point literals and are type float by default. 
Ans: False, they are known as floating point literals, however, they are type double by default.

3.3 What is the difference between a local variable and an instance variable?
Ans: A local variable is limited to the method in which it exist, its function cease to exist outside of this function, however, the instance variable on the other hand belongs to the class, therefore, this variable can be manipulated or called in different methods without having to pass it as a parameter.

3.4 Explain the purpose of a method parameter. What is the difference between a parameter and an argument?
Ans: A method parameter is like a placeholder for the value of an arguement which will be passed later in the method. The parameter signifies that the method will make use of the indicated data type and name, therefore if the method is invoked, the arguement (that is the value representation) of the parameter must be added.

3.5 (Keyword new) What’s the purpose of keyword new? Explain what happens when you use it.
Ans: The new keyword creates a new object of the particular class in memory. It appears in the class instance creation expression.

3.6 (Default Constructors) A class declares a constructor that takes two parameters. How would you create an instance of the class with no parameters?
Ans: If a class declares the constructor to take two parameters, the instance of the class created must also take two arguements, e.g:

	Person myFriend = new Person("Doyin Kolawole", "Brown skinned");

3.7 (Instance Variables) Explain the purpose of an instance variable.
Ans: Instance variableS are attributes peculiar to a class. That is, it belongs to the class and can be manipulated throughout the class.

3.8 (Using Classes without Importing Them) Most classes need to be imported before they can be used in an app. Why is every app allowed to use classes System and String without first importing them? 
Ans: System and String class belong to the java.lang package which is implicitly imported into our jdk alongside other classes such as the Math class. These are considered java core or fundamental packages. 

3.9 (Using a Class without Importing It) Explain how a program could use class Scanner without importing it.
Ans: Scanner class belongs to the java.util package which must be explicitly imported to the program so that the compiler may see where the package is comig from. However, this is simply a preference among most programmer because of its conciseness. We can alternatively supply the full package name with its class name everytime we need to use the Scanner class and do not need to import it explicitly, e.g: 
	java.util.Scanner input = new java.util.Scanner(System.in);

3.10 (set and get Methods) Explain the disadvantage of creating a class that has no set and get methods for an instance variable.
Ans: The set and get method allows the programmer to put in place edgecases for data presentation and information hiding , also known as encapsulation in object oriented programming. It also allows for easy information editing and the programmer does not have to edit all the methods all over with the presence of get and set method. There is also a control on how information is presented to user who can get pass the set and get method if it is used.